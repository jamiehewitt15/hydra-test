"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MINIMUM_BLOCKS_AHEAD = exports.PROCESSOR_POLL_INTERVAL = exports.BATCH_SIZE = exports.BLOCK_WINDOW = exports.DEFAULT_PROCESSOR_NAME = void 0;
const hydra_common_1 = require("@dzlzv/hydra-common");
exports.DEFAULT_PROCESSOR_NAME = 'hydra';
// Number of blocks to scan in a single request to the indexer
exports.BLOCK_WINDOW = 100000;
// Maximal number of events to process in a single transaction
exports.BATCH_SIZE = hydra_common_1.numberEnv('PROCESSOR_BATCH_SIZE') || 10;
// Interval at which the processor pulls new blocks from the database
// The interval is reasonably large by default. The trade-off is the latency
// between the updates and the load to the database
exports.PROCESSOR_POLL_INTERVAL = hydra_common_1.numberEnv('PROCESSOR_POLL_INTERVAL') || 60 * 1000; // 10 seconds
// Wait for the indexer head block to be ahead for at least that number of blocsk
exports.MINIMUM_BLOCKS_AHEAD = 2;
//# sourceMappingURL=processor-consts.js.map