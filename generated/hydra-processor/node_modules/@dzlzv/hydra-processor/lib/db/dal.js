"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.countProcessedEvents = exports.loadState = exports.createDBConnection = void 0;
const typeorm_1 = require("typeorm");
const ProcessedEventsLogEntity_1 = require("../entities/ProcessedEventsLogEntity");
const debug_1 = require("debug");
const ormconfig_1 = require("./ormconfig");
const debug = debug_1.default('index-builder:helper');
// eslint-disable-next-line @typescript-eslint/no-explicit-any
async function createDBConnection(entities = []) {
    // const connectionOptions = await getConnectionOptions();
    const _config = ormconfig_1.default();
    entities.map((e) => { var _a; return (_a = _config.entities) === null || _a === void 0 ? void 0 : _a.push(e); });
    debug(`DB config: ${JSON.stringify(_config, null, 2)}`);
    return typeorm_1.createConnection(_config);
}
exports.createDBConnection = createDBConnection;
/**
 * Get last event processed by the given mappings processor
 *
 * @param processorID Name of the processor
 */
async function loadState(processorID) {
    return await typeorm_1.getRepository(ProcessedEventsLogEntity_1.ProcessedEventsLogEntity).findOne({
        where: {
            processor: processorID,
        },
        order: {
            eventId: 'DESC',
            lastScannedBlock: 'DESC',
        },
    });
}
exports.loadState = loadState;
/**
 * Get last event processed by the given mappings processor
 *
 * @param processorID Name of the processor
 */
async function countProcessedEvents(processorID) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const { cnt } = await typeorm_1.getRepository(ProcessedEventsLogEntity_1.ProcessedEventsLogEntity)
        .createQueryBuilder('events')
        .select('COUNT(DISTINCT(events.event_id))', 'cnt')
        .where({ processor: processorID })
        .getRawOne();
    debug(`Total events count ${String(cnt)}`);
    return Number.parseInt(cnt) || 0;
}
exports.countProcessedEvents = countProcessedEvents;
//# sourceMappingURL=dal.js.map