"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RedisClientFactory = void 0;
const IORedis = require("ioredis");
const debug_1 = require("debug");
const lib_1 = require("@dzlzv/hydra-common/lib");
const debug = debug_1.default('index-builder:redis-factory');
class RedisClientFactory {
    constructor(redisURI, options) {
        this.clients = [];
        if (options) {
            this.factoryMetod = () => new IORedis(options);
            debug(`Using RedisOptions`);
            return;
        }
        const uri = redisURI || process.env.REDIS_URI;
        if (uri) {
            this.factoryMetod = () => new IORedis(uri);
            debug(`Using ${uri} for Redis clients`);
        }
        else {
            throw new Error(`Redis URL is not provided`);
        }
    }
    getClient() {
        const client = this.factoryMetod();
        this.clients.push(client);
        return client;
    }
    stop() {
        for (const client of this.clients) {
            if (client) {
                try {
                    client.disconnect();
                }
                catch (e) {
                    debug(`Failed to disconnect redis client: ${lib_1.logError(e)}`);
                }
            }
        }
    }
}
exports.RedisClientFactory = RedisClientFactory;
//# sourceMappingURL=RedisClientFactory.js.map