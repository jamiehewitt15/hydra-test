"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.KitchenSink = exports.StringEnum = void 0;
var typeorm_1 = require("typeorm");
var __1 = require("../../../");
var dish_model_1 = require("../dish/dish.model");
var shared_1 = require("../shared");
Object.defineProperty(exports, "StringEnum", { enumerable: true, get: function () { return shared_1.StringEnum; } });
var KitchenSink = /** @class */ (function (_super) {
    __extends(KitchenSink, _super);
    function KitchenSink() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        __1.StringField({ description: 'This is a string field' }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "stringField", void 0);
    __decorate([
        __1.StringField({ nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "nullableStringField", void 0);
    __decorate([
        __1.DateField({ nullable: true }),
        __metadata("design:type", Date)
    ], KitchenSink.prototype, "dateField", void 0);
    __decorate([
        __1.DateOnlyField({ nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "dateOnlyField", void 0);
    __decorate([
        __1.DateTimeField({ nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "dateTimeField", void 0);
    __decorate([
        __1.EmailField(),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "emailField", void 0);
    __decorate([
        __1.IntField(),
        __metadata("design:type", Number)
    ], KitchenSink.prototype, "integerField", void 0);
    __decorate([
        __1.BooleanField(),
        __metadata("design:type", Boolean)
    ], KitchenSink.prototype, "booleanField", void 0);
    __decorate([
        __1.FloatField(),
        __metadata("design:type", Number)
    ], KitchenSink.prototype, "floatField", void 0);
    __decorate([
        __1.JSONField({ nullable: true }),
        __metadata("design:type", Object)
    ], KitchenSink.prototype, "jsonField", void 0);
    __decorate([
        __1.IdField({ nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "idField", void 0);
    __decorate([
        __1.EnumField('StringEnum', shared_1.StringEnum, { nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "stringEnumField", void 0);
    __decorate([
        __1.OneToMany(function () { return dish_model_1.Dish; }, function (dish) { return dish.kitchenSink; }),
        __metadata("design:type", Array)
    ], KitchenSink.prototype, "dishes", void 0);
    __decorate([
        typeorm_1.Column({ nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "dbOnlyColumn", void 0);
    __decorate([
        __1.NumericField({ nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "numericField", void 0);
    __decorate([
        __1.NumericField({ nullable: true, precision: 5, scale: 2 }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "numericFieldCustomPrecisionScale", void 0);
    __decorate([
        __1.StringField({ filter: false, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "noFilterField", void 0);
    __decorate([
        __1.StringField({ sort: false, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "noSortField", void 0);
    __decorate([
        __1.StringField({ filter: false, sort: false, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "noFilterOrSortField", void 0);
    __decorate([
        __1.StringField({ filter: ['eq', 'contains'], sort: false, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "stringFieldFilterEqContains", void 0);
    __decorate([
        __1.IntField({ filter: ['lte', 'gte'], sort: false, nullable: true }),
        __metadata("design:type", Number)
    ], KitchenSink.prototype, "intFieldFilterLteGte", void 0);
    __decorate([
        __1.StringField({ dataType: 'character', nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "characterField", void 0);
    __decorate([
        __1.CustomField({
            api: { type: 'string', nullable: true, sort: false, filter: false },
            db: { type: 'text', nullable: true }
        }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "customTextFieldNoSortOrFilter", void 0);
    __decorate([
        __1.CustomField({
            api: { type: 'string', nullable: true, sort: false, filter: false },
            db: { type: 'text', nullable: true, array: true }
        }),
        __metadata("design:type", Array)
    ], KitchenSink.prototype, "customFieldArrayColumn", void 0);
    __decorate([
        __1.StringField({ readonly: true, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "readonlyField", void 0);
    __decorate([
        __1.StringField({ writeonly: true, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "writeonlyField", void 0);
    __decorate([
        __1.StringField({ dbOnly: true, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "dbOnlyField", void 0);
    __decorate([
        __1.StringField({ apiOnly: true, nullable: true }),
        __metadata("design:type", String)
    ], KitchenSink.prototype, "apiOnlyField", void 0);
    __decorate([
        __1.StringField({ array: true, nullable: true }),
        __metadata("design:type", Array)
    ], KitchenSink.prototype, "arrayOfStrings", void 0);
    __decorate([
        __1.IntField({ array: true, nullable: true }),
        __metadata("design:type", Array)
    ], KitchenSink.prototype, "arrayOfInts", void 0);
    KitchenSink = __decorate([
        __1.Model()
    ], KitchenSink);
    return KitchenSink;
}(__1.BaseModel));
exports.KitchenSink = KitchenSink;
//# sourceMappingURL=kitchen-sink.model.js.map