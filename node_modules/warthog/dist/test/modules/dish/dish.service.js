"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DishService = void 0;
var typedi_1 = require("typedi");
var typeorm_1 = require("typeorm");
var typeorm_typedi_extensions_1 = require("typeorm-typedi-extensions");
var __1 = require("../../../");
var dish_model_1 = require("./dish.model");
var DishService = /** @class */ (function (_super) {
    __extends(DishService, _super);
    function DishService(repository) {
        var _this = _super.call(this, dish_model_1.Dish, repository) || this;
        _this.repository = repository;
        return _this;
    }
    DishService.prototype.successfulTransaction = function (data, userId, manager) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, id, nonTransactionUser, user1, user2;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.create(data, userId)];
                    case 1:
                        _a = _b.sent(), id = _a.id, nonTransactionUser = __rest(_a, ["id"]);
                        return [4 /*yield*/, this.create(data, userId, { manager: manager })];
                    case 2:
                        user1 = _b.sent();
                        return [4 /*yield*/, this.update(__assign(__assign({}, nonTransactionUser), { name: data.name + " Updated" }), { id: id }, userId, {
                                manager: manager
                            })];
                    case 3:
                        user2 = _b.sent();
                        return [2 /*return*/, [user1, user2]];
                }
            });
        });
    };
    // This opens the transaction automatically and either commits or rolls back based on whether the function
    // throws or not, so you must execute database calls in here, they cannot be returned like they are above.
    DishService.prototype.failedTransaction = function (data, userId, manager) {
        return __awaiter(this, void 0, void 0, function () {
            var invalidUserData, users;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        invalidUserData = {};
                        return [4 /*yield*/, Promise.all([
                                this.create(data, userId, { manager: manager }),
                                this.create(invalidUserData, userId, { manager: manager }) // This one fails
                            ])];
                    case 1:
                        users = _a.sent();
                        // You cannot return a promise here or else the transaction manager will think the transaction is good
                        return [2 /*return*/, users];
                }
            });
        });
    };
    __decorate([
        typeorm_1.Transaction(),
        __param(2, typeorm_1.TransactionManager()),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object, String, typeorm_1.EntityManager]),
        __metadata("design:returntype", Promise)
    ], DishService.prototype, "successfulTransaction", null);
    __decorate([
        typeorm_1.Transaction(),
        __param(2, typeorm_1.TransactionManager()),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object, String, typeorm_1.EntityManager]),
        __metadata("design:returntype", Promise)
    ], DishService.prototype, "failedTransaction", null);
    DishService = __decorate([
        typedi_1.Service('DishService'),
        __param(0, typeorm_typedi_extensions_1.InjectRepository(dish_model_1.Dish)),
        __metadata("design:paramtypes", [typeorm_1.Repository])
    ], DishService);
    return DishService;
}(__1.BaseService));
exports.DishService = DishService;
//# sourceMappingURL=dish.service.js.map