"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.doInTransaction = exports.fillRequiredWarthogFields = void 0;
const shortid = require("shortid");
const typeorm_1 = require("typeorm");
const debug_1 = require("debug");
const lib_1 = require("@dzlzv/hydra-common/lib");
const debug = debug_1.default('index-builder:helper');
/**
 * Fixes compatibility between typeorm and warthog models.
 *
 * @tutorial Warthog add extra properties to its BaseModel and some of these properties are
 * required. This function mutate the entity to make it compatible with warthog models.
 * Warthog throw error if required properties contains null values.
 *
 * @param entity: DeepPartial<T>
 */
function fillRequiredWarthogFields(entity) {
    // eslint-disable-next-line no-prototype-builtins
    if (!entity.hasOwnProperty('id')) {
        Object.assign(entity, { id: shortid.generate() });
    }
    // eslint-disable-next-line no-prototype-builtins
    if (!entity.hasOwnProperty('createdById')) {
        Object.assign(entity, { createdById: shortid.generate() });
    }
    // eslint-disable-next-line no-prototype-builtins
    if (!entity.hasOwnProperty('version')) {
        Object.assign(entity, { version: 1 });
    }
    return entity;
}
exports.fillRequiredWarthogFields = fillRequiredWarthogFields;
async function doInTransaction(fn) {
    const queryRunner = typeorm_1.getConnection().createQueryRunner();
    try {
        // establish real database connection
        await queryRunner.connect();
        await queryRunner.startTransaction();
        const result = await fn(queryRunner);
        await queryRunner.commitTransaction();
        return result;
    }
    catch (error) {
        console.error(`Rolling back the transaction due to errors: ${lib_1.logError(error)}`);
        // Since we have errors lets rollback changes we made
        await queryRunner.rollbackTransaction();
        throw new Error(error);
    }
    finally {
        // Query runner needs to be released manually.
        await queryRunner.release();
    }
}
exports.doInTransaction = doInTransaction;
//# sourceMappingURL=helper.js.map