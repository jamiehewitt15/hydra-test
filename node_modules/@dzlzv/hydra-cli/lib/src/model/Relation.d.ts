import { Field } from '.';
interface JoinTable {
    tableName: string;
    joinColumn: string;
    inverseJoinColumn: string;
}
export interface Relation {
    type: string;
    columnType: string;
    nullable: boolean;
    joinColumn?: boolean;
    joinTable?: JoinTable;
    relatedTsProp?: string;
}
/**
 * Field resolver for related fields
 */
export interface FieldResolver {
    returnTypeFunc: string;
    fieldName: string;
    rootArgName: string;
    rootArgType: string;
    returnType: string;
}
export declare function makeRelation(type: string, columnType: string, relatedTsProp: string, nullable: boolean): Relation;
export interface EntityRelationship {
    entityName: string;
    relatedEntityName: string;
    field: Field;
    relatedField: Field;
    type: string;
}
export declare enum RelationType {
    OTO = "oto",
    OTM = "otm",
    MTM = "mtm"
}
export {};
