import { Command, flags } from '@oclif/command';
export default class Scaffold extends Command {
    static description: string;
    static flags: {
        projectName: flags.IOptionFlag<string | undefined>;
        wsProviderUrl: flags.IOptionFlag<string>;
        indexerUrl: flags.IOptionFlag<string>;
        mappings: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        blockHeight: flags.IOptionFlag<string>;
        dbHost: flags.IOptionFlag<string>;
        dbPort: flags.IOptionFlag<string>;
        dbUser: flags.IOptionFlag<string>;
        dbPassword: flags.IOptionFlag<string>;
        appPort: flags.IOptionFlag<string>;
    };
    run(): Promise<void>;
    dotenvFromFlags(flags: {
        [key: string]: string | boolean | undefined;
    }): Promise<string>;
    promptDotEnv(): Promise<string>;
    promptProcessorEnvs(ctx: Record<string, string>): Promise<Record<string, string>>;
    promptIndexerEnvs(ctx: Record<string, string>): Promise<Record<string, string>>;
    promptCustomTypes(ctx: Record<string, string>): Promise<Record<string, string>>;
    setupMappings(): Promise<void>;
    setupDocker(): Promise<void>;
    setupNodeProject(): Promise<void>;
}
