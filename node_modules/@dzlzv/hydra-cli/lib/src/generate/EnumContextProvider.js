"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnumContextProvider = void 0;
const tslib_1 = require("tslib");
const enum_context_1 = require("./enum-context");
const debug_1 = tslib_1.__importDefault(require("debug"));
const debug = debug_1.default('qnode-cli:enum-ctx-provider');
class EnumContextProvider {
    constructor() {
        this.exported = {};
        // withEnums(objType: ObjectType): GeneratorContext {
        //   const referncedEnums = new Set<GraphQLEnumType>();
        //   objType.fields.map(f => {
        //     if (f.isEnum()) referncedEnums.add(this.model.lookupEnum(f.type));
        //   });
        //   const enums: GeneratorContext[] = [];
        //   for (const e of referncedEnums) {
        //     enums.push(this.withEnum(e));
        //   }
        //   debug(`With enums: ${JSON.stringify(enums, null, 2)}`);
        //   return {
        //     enums,
        //   };
        // }
    }
    withEnum(enumType) {
        return Object.assign(Object.assign({}, this.withExport(enumType.name)), enum_context_1.withEnum(enumType));
    }
    withExport(enumType) {
        if (!this.exported[enumType]) {
            this.exported[enumType] = true;
            return {
                // wether the enum should be exported in the template. It must be done only once
                export: true,
            };
        }
        debug(`Enum ${enumType} is already exported`);
        return {};
    }
}
exports.EnumContextProvider = EnumContextProvider;
